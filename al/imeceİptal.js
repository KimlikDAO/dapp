/**
 * @fileoverview Ä°mece iptal parÃ§asÄ±. DOM'da `im` Ã¶neki bu parÃ§aya ayrÄ±lmÄ±ÅŸtÄ±r.
 */

import CÃ¼zdan from "/birim/cÃ¼zdan/birim";
import dom from "/lib/dom";
import evm from "/lib/evm";

/** @const {Element} */
const GÃ¶sterButonu = dom.adla("imbe");
/** @const {Element} */
const Ä°ptalButonu = dom.adla("imbh");
/** @const {Element} */
const Ä°ptalciler = dom.adla("imf");

/**
 * Ä°mece iptal kurulumunu yapar ve verilmiÅŸ callback fonksiyonunu Ã§aÄŸÄ±rÄ±r.
 * 
 * @param {function(Object<string,number>,number)} sonra
 */
const imeceÄ°ptalKurVe = (sonra) => {
  GÃ¶sterButonu.onclick = () => gÃ¶ster(sonra);
  Ä°ptalButonu.onclick = () => atla(sonra);
}

const atla = (sonra) => {
  GÃ¶sterButonu.style.display = "";
  GÃ¶sterButonu.innerText = "Yine de kur";
  Ä°ptalButonu.style.display = "";
  Ä°ptalButonu.innerText = "Ä°mece iptal kurulmadÄ± ğŸ¤Œ";
  Ä°ptalButonu.classList.add("done");
  dom.adla("im").classList.add("done");
  dom.adla("imc").style.display = "none";
  sonra({}, 0);
}

const gÃ¶ster = (sonra) => {
  dom.adla("im").classList.remove("done");
  dom.adla("imc").style.display = "";
  GÃ¶sterButonu.style.display = "none";
  Ä°ptalButonu.style.display = "none";
  dom.adla("imbi").onclick = () => atla(sonra);

  /** @const {NodeList<!Element>} */
  const satÄ±r = Ä°ptalciler.children;
  for (let i = 0; i < satÄ±r.length; ++i) {
    iÅŸlevEkle(satÄ±r[i]);
  }
  dom.adla("imba").onclick = girdiAlanÄ±Ekle;
  dom.adla("imt").onblur = eÅŸikDeÄŸeriBlurOlunca;
  dom.adla("imtm").onclick = () => eÅŸikBirDeÄŸiÅŸtir(false);
  dom.adla("imtp").onclick = () => eÅŸikBirDeÄŸiÅŸtir(true);
  dom.adla("imbt").onclick = () => {
    /** @type {!Object<string, number>} */
    let adresAÄŸÄ±rlÄ±ÄŸÄ± = {};
    /** @type {boolean} */
    let geÃ§erli = true;
    /** @type {number} */
    let toplamAÄŸÄ±rlÄ±k = 0;

    const satÄ±r = Ä°ptalciler.children;
    for (let i = 0; i < satÄ±r.length; ++i) {
      /** @const {Element} */
      const girdi = satÄ±r[i].firstElementChild;
      /** @const {string} */
      const adres = girdi.value;
      if (!evm.adresGeÃ§erli(adres) || adres in adresAÄŸÄ±rlÄ±ÄŸÄ± ||
        adres.toLowerCase() == CÃ¼zdan.adres()) {
        geÃ§erli = false;
        satÄ±r[i].firstElementChild.classList.add("imin");
      }
      /** @type {number} */
      const aÄŸÄ±rlÄ±k = parseInt(satÄ±r[i].children[3].value);
      adresAÄŸÄ±rlÄ±ÄŸÄ±[adres] = aÄŸÄ±rlÄ±k;
      toplamAÄŸÄ±rlÄ±k += aÄŸÄ±rlÄ±k;
    }
    /** @type {number} */
    const eÅŸikDeÄŸeri = parseInt(dom.adla("imt").value);
    if (toplamAÄŸÄ±rlÄ±k < eÅŸikDeÄŸeri) {
      geÃ§erli = false;
      dom.adla("imt").classList.add("imin");
    }
    if (geÃ§erli) {
      Ä°ptalButonu.style.display = "";
      Ä°ptalButonu.innerText = "Ä°mece iptal kuruldu âœ“";
      Ä°ptalButonu.onclick = null;
      dom.adla("imc").style.display = "none";
      dom.adla("im").classList.add("done");
      adresAÄŸÄ±rlÄ±ÄŸÄ±["length"] = Ä°ptalciler.childElementCount;
      sonra(adresAÄŸÄ±rlÄ±ÄŸÄ±, eÅŸikDeÄŸeri);
    }
  };
}

const iÅŸlevEkle = (satÄ±r) => {
  const elemanlar = satÄ±r.children;
  elemanlar[0].value = "";
  elemanlar[0].onblur = (e) => girdiDÃ¼zelt(e.target);
  elemanlar[0].classList.remove("imin");
  elemanlar[1].onclick = yapÄ±ÅŸtÄ±r;
  elemanlar[2].onclick = birAzalt;
  elemanlar[3].onblur = aÄŸÄ±rlÄ±kBlurOlunca;
  elemanlar[3].onclick = (e) => e.target.value = "";
  elemanlar[3].value = 1;
  elemanlar[4].onclick = birArttÄ±r;
  elemanlar[5].onclick = satÄ±rSil;
}

const girdiAlanÄ±Ekle = () => {
  let yeniSatÄ±r = Ä°ptalciler.firstElementChild.cloneNode(true);
  iÅŸlevEkle(yeniSatÄ±r);
  Ä°ptalciler.appendChild(yeniSatÄ±r);
  if (Ä°ptalciler.childElementCount >= 3)
    Ä°ptalciler.classList.add("im3");
  aÄŸÄ±rlÄ±kHesapla();
}

const eÅŸikDeÄŸeriBlurOlunca = (event) => {
  /** @const {boolean} */
  const geÃ§erli =
    parseInt(event.target.value) <= parseInt(dom.adla("ims").value);
  dom.adla("imt").classList.toggle("imin", geÃ§erli);
}

const girdiDÃ¼zelt = (girdi) => {
  const deÄŸer = girdi.value;
  const dÃ¼z = evm.adresDÃ¼zelt(deÄŸer);
  if (dÃ¼z) girdi.value = dÃ¼z
  /** @const {boolean} */
  const hataVar = deÄŸer &&
    (!dÃ¼z || deÄŸer.toLowerCase() == CÃ¼zdan.adres().toLowerCase())
  girdi.classList.toggle("imin", hataVar);
}

const yapÄ±ÅŸtÄ±r = (event) => {
  let a = event.target.nodeName == 'A'
    ? event.target : event.target.parentElement;
  const girdi = a.previousElementSibling;
  navigator.clipboard.readText().then(
    (deÄŸer) => {
      girdi.value = deÄŸer;
      girdiDÃ¼zelt(girdi);
    })
}

const satÄ±rSil = (event) => {
  let a = event.target.nodeName == "A"
    ? event.target : event.target.parentElement
  a.parentElement.remove();
  if (Ä°ptalciler.childElementCount < 3) Ä°ptalciler.classList.remove("im3");
  aÄŸÄ±rlÄ±kHesapla();
}

const birAzalt = (event) => {
  const node = event.target.nextElementSibling;
  if (node.value == 1) return;
  node.value = parseInt(node.value) - 1;
  aÄŸÄ±rlÄ±kHesapla();
}

const birArttÄ±r = (event) => {
  const node = event.target.previousElementSibling;
  if (node.value == 9) return;
  node.value = parseInt(node.value) + 1;
  aÄŸÄ±rlÄ±kHesapla();
}

const aÄŸÄ±rlÄ±kBlurOlunca = (event) => {
  let val = event.target.value;
  if (val > 9) event.target.value = 9;
  if (val < 1 || val == "") event.target.value = 1;
  aÄŸÄ±rlÄ±kHesapla();
}

const eÅŸikBirDeÄŸiÅŸtir = (artÄ±r) => {
  const eÅŸik = dom.adla("imt");
  const deÄŸer = parseInt(eÅŸik.value);
  const toplam = parseInt(dom.adla("ims").value);
  eÅŸik.value = artÄ±r
    ? Math.min(deÄŸer + 1, 99, toplam) : Math.max(deÄŸer - 1, 1);
}

const aÄŸÄ±rlÄ±kHesapla = () => {
  /** @type {number} */
  let total = 0;
  /** @const {NodeList<!Element>} */
  const satÄ±r = Ä°ptalciler.children;
  for (let /** number */ i = 0; i < satÄ±r.length; ++i) {
    total += parseInt(satÄ±r[i].children[3].value);
  }
  dom.adla("ims").value = total;
  const eÅŸik = dom.adla("imt");
  if (eÅŸik.value > total)
    eÅŸik.value = total;
}

export { imeceÄ°ptalKurVe };
